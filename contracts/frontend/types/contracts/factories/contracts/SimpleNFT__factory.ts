/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { SimpleNFT, SimpleNFTInterface } from "../../contracts/SimpleNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "PermanentURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "freezeMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isMetadataFrozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260016007553480156200001657600080fd5b50604051620017ac380380620017ac8339810160408190526200003991620001b7565b80838360006200004a8382620002d3565b506001620000598282620002d3565b5050506001600160a01b0381166200008b57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200009681620000a0565b505050506200039f565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200011a57600080fd5b81516001600160401b0380821115620001375762000137620000f2565b604051601f8301601f19908116603f01168101908282118183101715620001625762000162620000f2565b816040528381526020925086838588010111156200017f57600080fd5b600091505b83821015620001a3578582018301518183018401529082019062000184565b600093810190920192909252949350505050565b600080600060608486031215620001cd57600080fd5b83516001600160401b0380821115620001e557600080fd5b620001f38783880162000108565b945060208601519150808211156200020a57600080fd5b50620002198682870162000108565b604086015190935090506001600160a01b03811681146200023957600080fd5b809150509250925092565b600181811c908216806200025957607f821691505b6020821081036200027a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002ce57600081815260208120601f850160051c81016020861015620002a95750805b601f850160051c820191505b81811015620002ca57828155600101620002b5565b5050505b505050565b81516001600160401b03811115620002ef57620002ef620000f2565b620003078162000300845462000244565b8462000280565b602080601f8311600181146200033f5760008415620003265750858301515b600019600386901b1c1916600185901b178555620002ca565b600085815260208120601f198616915b8281101562000370578886015182559484019460019091019084016200034f565b50858210156200038f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6113fd80620003af6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80636352211e116100b8578063a22cb4651161007c578063a22cb46514610262578063b88d4fde14610275578063c87b56dd14610288578063d111515d1461029b578063e985e9c5146102a3578063f2fde38b146102b657600080fd5b80636352211e1461021b57806370a082311461022e578063715018a6146102415780638da5cb5b1461024957806395d89b411461025a57600080fd5b80631249c58b116100ff5780631249c58b146101c457806318160ddd146101da57806323b872dd146101e257806342842e0e146101f557806355f804b31461020857600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a45780630e24495e146101b9575b600080fd5b61014f61014a366004610ec6565b6102c9565b60405190151581526020015b60405180910390f35b61016c6102ec565b60405161015b9190610f33565b61018c610187366004610f46565b61037e565b6040516001600160a01b03909116815260200161015b565b6101b76101b2366004610f7b565b6103a7565b005b60095460ff1661014f565b6101cc6103b6565b60405190815260200161015b565b6101cc610412565b6101b76101f0366004610fa5565b610428565b6101b7610203366004610fa5565b6104b8565b6101b761021636600461106d565b6104d8565b61018c610229366004610f46565b610573565b6101cc61023c3660046110b6565b61057e565b6101b76105c6565b6006546001600160a01b031661018c565b61016c6105da565b6101b76102703660046110d1565b6105e9565b6101b761028336600461110d565b6105f4565b61016c610296366004610f46565b61060c565b6101b7610674565b61014f6102b1366004611189565b61068b565b6101b76102c43660046110b6565b6106b9565b60006001600160e01b0319821615806102e657506102e6826106f7565b92915050565b6060600080546102fb906111bc565b80601f0160208091040260200160405190810160405280929190818152602001828054610327906111bc565b80156103745780601f1061034957610100808354040283529160200191610374565b820191906000526020600020905b81548152906001019060200180831161035757829003601f168201915b5050505050905090565b600061038982610747565b506000828152600460205260409020546001600160a01b03166102e6565b6103b2828233610780565b5050565b60078054600091829190826103ca8361120c565b9190505590506103da338261078d565b6040518181527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a1919050565b600060016007546104239190611225565b905090565b6001600160a01b03821661045757604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006104648383336107a7565b9050836001600160a01b0316816001600160a01b0316146104b2576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161044e565b50505050565b6104d3838383604051806020016040528060008152506105f4565b505050565b6104e06108a0565b60095460ff16156105285760405162461bcd60e51b815260206004820152601260248201527126b2ba30b230ba309034b990333937bd32b760711b604482015260640161044e565b6008610534828261127e565b50604080516001815260001960208201527f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c910160405180910390a150565b60006102e682610747565b60006001600160a01b0382166105aa576040516322718ad960e21b81526000600482015260240161044e565b506001600160a01b031660009081526003602052604090205490565b6105ce6108a0565b6105d860006108cd565b565b6060600180546102fb906111bc565b6103b233838361091f565b6105ff848484610428565b6104b233858585856109be565b606061061782610747565b506000610622610ae9565b90506000815111610642576040518060200160405280600081525061066d565b8061064c84610af8565b60405160200161065d92919061133e565b6040516020818303038152906040525b9392505050565b61067c6108a0565b6009805460ff19166001179055565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6106c16108a0565b6001600160a01b0381166106eb57604051631e4fbdf760e01b81526000600482015260240161044e565b6106f4816108cd565b50565b60006001600160e01b031982166380ac58cd60e01b148061072857506001600160e01b03198216635b5e139f60e01b145b806102e657506301ffc9a760e01b6001600160e01b03198316146102e6565b6000818152600260205260408120546001600160a01b0316806102e657604051637e27328960e01b81526004810184905260240161044e565b6104d38383836001610b8b565b6103b2828260405180602001604052806000815250610c91565b6000828152600260205260408120546001600160a01b03908116908316156107d4576107d4818486610ca9565b6001600160a01b03811615610812576107f1600085600080610b8b565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610841576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6006546001600160a01b031633146105d85760405163118cdaa760e01b815233600482015260240161044e565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661095157604051630b61174360e31b81526001600160a01b038316600482015260240161044e565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610ae257604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610a0090889088908790879060040161136d565b6020604051808303816000875af1925050508015610a3b575060408051601f3d908101601f19168201909252610a38918101906113aa565b60015b610aa4573d808015610a69576040519150601f19603f3d011682016040523d82523d6000602084013e610a6e565b606091505b508051600003610a9c57604051633250574960e11b81526001600160a01b038516600482015260240161044e565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610ae057604051633250574960e11b81526001600160a01b038516600482015260240161044e565b505b5050505050565b6060600880546102fb906111bc565b60606000610b0583610d0d565b600101905060008167ffffffffffffffff811115610b2557610b25610fe1565b6040519080825280601f01601f191660200182016040528015610b4f576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610b5957509392505050565b8080610b9f57506001600160a01b03821615155b15610c61576000610baf84610747565b90506001600160a01b03831615801590610bdb5750826001600160a01b0316816001600160a01b031614155b8015610bee5750610bec818461068b565b155b15610c175760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161044e565b8115610c5f5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610c9b8383610de5565b6104d33360008585856109be565b610cb4838383610e4a565b6104d3576001600160a01b038316610ce257604051637e27328960e01b81526004810182905260240161044e565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161044e565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610d4c5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610d78576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610d9657662386f26fc10000830492506010015b6305f5e1008310610dae576305f5e100830492506008015b6127108310610dc257612710830492506004015b60648310610dd4576064830492506002015b600a83106102e65760010192915050565b6001600160a01b038216610e0f57604051633250574960e11b81526000600482015260240161044e565b6000610e1d838360006107a7565b90506001600160a01b038116156104d3576040516339e3563760e11b81526000600482015260240161044e565b60006001600160a01b03831615801590610ea85750826001600160a01b0316846001600160a01b03161480610e845750610e84848461068b565b80610ea857506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160e01b0319811681146106f457600080fd5b600060208284031215610ed857600080fd5b813561066d81610eb0565b60005b83811015610efe578181015183820152602001610ee6565b50506000910152565b60008151808452610f1f816020860160208601610ee3565b601f01601f19169290920160200192915050565b60208152600061066d6020830184610f07565b600060208284031215610f5857600080fd5b5035919050565b80356001600160a01b0381168114610f7657600080fd5b919050565b60008060408385031215610f8e57600080fd5b610f9783610f5f565b946020939093013593505050565b600080600060608486031215610fba57600080fd5b610fc384610f5f565b9250610fd160208501610f5f565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561101257611012610fe1565b604051601f8501601f19908116603f0116810190828211818310171561103a5761103a610fe1565b8160405280935085815286868601111561105357600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561107f57600080fd5b813567ffffffffffffffff81111561109657600080fd5b8201601f810184136110a757600080fd5b610ea884823560208401610ff7565b6000602082840312156110c857600080fd5b61066d82610f5f565b600080604083850312156110e457600080fd5b6110ed83610f5f565b91506020830135801515811461110257600080fd5b809150509250929050565b6000806000806080858703121561112357600080fd5b61112c85610f5f565b935061113a60208601610f5f565b925060408501359150606085013567ffffffffffffffff81111561115d57600080fd5b8501601f8101871361116e57600080fd5b61117d87823560208401610ff7565b91505092959194509250565b6000806040838503121561119c57600080fd5b6111a583610f5f565b91506111b360208401610f5f565b90509250929050565b600181811c908216806111d057607f821691505b6020821081036111f057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60006001820161121e5761121e6111f6565b5060010190565b818103818111156102e6576102e66111f6565b601f8211156104d357600081815260208120601f850160051c8101602086101561125f5750805b601f850160051c820191505b81811015610ae05782815560010161126b565b815167ffffffffffffffff81111561129857611298610fe1565b6112ac816112a684546111bc565b84611238565b602080601f8311600181146112e157600084156112c95750858301515b600019600386901b1c1916600185901b178555610ae0565b600085815260208120601f198616915b82811015611310578886015182559484019460019091019084016112f1565b508582101561132e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008351611350818460208801610ee3565b835190830190611364818360208801610ee3565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906113a090830184610f07565b9695505050505050565b6000602082840312156113bc57600080fd5b815161066d81610eb056fea2646970667358221220c981966df919e5603b5a561e819d480d459a65e11b09f836bb517a894dfbffde64736f6c63430008140033";

type SimpleNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleNFT__factory extends ContractFactory {
  constructor(...args: SimpleNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      initialOwner,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, symbol, initialOwner, overrides || {}) as Promise<
      SimpleNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleNFT__factory {
    return super.connect(runner) as SimpleNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleNFTInterface {
    return new Interface(_abi) as SimpleNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SimpleNFT {
    return new Contract(address, _abi, runner) as unknown as SimpleNFT;
  }
}
